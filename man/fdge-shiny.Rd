% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fdge-shiny.R
\name{fdgeGadget}
\alias{fdgeGadget}
\alias{fdgeAnalysis}
\title{Fully interactive differential expression analysis}
\usage{
fdgeGadget(
  x,
  title = "Differential Expression Analysis",
  height = 800,
  width = 1000,
  viewer = "browser",
  ...
)

fdgeAnalysis(input, output, session, rfds, ..., debug = FALSE)
}
\value{
a \code{ReactiveFacileDgeAnalysisResult}, the output from \code{\link[=fdge]{fdge()}}
}
\description{
Assembles a shiny UI to define all of the bits required to perform a
differential expression analysis over a predefined set of samples.
}
\details{
An interactive differential expression analysis is divided into three
steps, each of which provides its own shiny module and interface. The
minimal input to this analysis is a pre-defined subset of samples to act on.

These steps are:
\enumerate{
\item Model matrix definition. The functionality is provided by the
\code{\link[=flm_def]{flm_def()}} function, and the shiny interface by the
\code{\link[=flmDefRun]{flmDefRun()}} module.
\item Differential expression analysis. The functionality is
defined by the \code{\link[=fdge]{fdge()}} function, and the shiny interface by the
\code{\link[=fdgeRun]{fdgeRun()}} module.
\item Results display. The interactive display of the results is provided
by the \code{\link[=fdgeView]{fdgeView()}} module.
}
}
\section{Interactive Gadget}{

}

\section{Analysis Module}{

Wrapper module to perform and interact with a differential expression result.

This module can be embedded within a shiny app, or called from a gadget.
}

\examples{
if (interactive()) {
# run tumor vs normal comparisons vs each, then run compare() on the results
options(facile.log.level.fshine = "trace")
efds <- FacileData::exampleFacileDataSet()
dge.crc <- efds |>
  FacileData::filter_samples(indication == "CRC") |>
  fdgeGadget(viewer = "pane")
dge.blca <- efds |>
  FacileData::filter_samples(indication == "BLCA") |>
  fdgeGadget(viewer = "pane")
dge.comp <- compare(dge.crc, dge.blca)

\dontrun{
tfds <- FacileDataSet("~/workspace/data/FacileData/dockerlink/FacileTcgaDataSet")
tsamples <- FacileData::filter_samples(tfds, indication == "BRCA")
tdge <- fdgeGadget(tsamples, viewer = "browser")
}
report(dge.comp)
shine(dge.comp)
}
}
